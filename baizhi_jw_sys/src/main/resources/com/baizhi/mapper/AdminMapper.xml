<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baizhi.dao.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.baizhi.entity.Admin" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="adminname" property="adminname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
  </resultMap>


  <sql id="Base_Column_List" >
    id, adminname, password, salt
  </sql>
  <!--根据管理员名字来查询该管理员-->
  <select id="selectByName" resultType="admin" parameterType="String">
    select
    <include refid="Base_Column_List" />
    from jw_admin
    where adminname= #{name}
  </select>

  <!--根据管理员名字来查询该管理员的详细信息-->

  <resultMap id="sd" type="admin">
    <id column="aid" property="id" jdbcType="VARCHAR" />
    <result column="adminname" property="adminname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <collection property="roles" javaType="list" ofType="role">
      <id column="rid" property="id"></id>
      <result column="rname" property="name"/>
      <collection property="permissions" javaType="list" ofType="permission">
        <id column="pid" property="id"></id>
        <result column="pname" property="name"/>
      </collection>
    </collection>
  </resultMap>
  <select id="selectByNameDetail" resultMap="sd" parameterType="String">
    SELECT
a.id AS aid,
a.adminname AS adminname,
a.`password` AS `password`,
a.salt AS salt,
r.id AS rid,
r.`name` AS rname,
p.id AS pid,
p.`name` AS pname
FROM
jw_admin AS a
LEFT JOIN jw_admin_role AS ar ON ar.adminid = a.id
LEFT JOIN jw_role AS r ON ar.roleid = r.id
LEFT JOIN jw_permission_role AS pr ON pr.roleid = r.id
LEFT JOIN jw_permission AS p ON pr.permissionid = p.id
where adminname=#{name}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from jw_admin
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from jw_admin
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.baizhi.entity.Admin" >
    insert into jw_admin (id, adminname, password, 
      salt)
    values (#{id,jdbcType=VARCHAR}, #{adminname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.baizhi.entity.Admin" >
    insert into jw_admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="adminname != null" >
        adminname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="adminname != null" >
        #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.baizhi.entity.Admin" >
    update jw_admin
    <set >
      <if test="adminname != null" >
        adminname = #{adminname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baizhi.entity.Admin" >
    update jw_admin
    set adminname = #{adminname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>